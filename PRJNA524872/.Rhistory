library(Biostrings)
library("tidyr")
library("dplyr")
library("stringr")
fna <- readDNAStringSet("cds_from_genomic.fna") %>% # extract .fna file (proteins' sequences)
as.data.frame()
fna <- fna %>% mutate( # add column with protein_id
protein_id = str_extract(rownames(fna), "(?<=protein_id=)[^]]+")
)
fna <- fna[!is.na(fna$protein_id), ] # removes rows with no protein_id
faa <- readDNAStringSet("protein.faa")
faa_ids <- sub(" .*", "", names(faa))  # take only the protein_id
faa@ranges@NAMES
fna <- fna[fna$protein_id %in% faa_ids,] # select protein_id that are both in .faa and .fna
order_idx <- match(fna$protein_id, faa_ids)
ordered_faa <- faa[order_idx]
#writeXStringSet(ordered_faa, "reordered.faa") # save the ordered .faa file
View(ordered_faa)
ordered_faa@ranges@NAMES
writeXStringSet(ordered_faa, "reordered.faa") # save the ordered .faa file
View(faa)
View(ordered_faa)
fna <- fna[fna$protein_id %in% faa_ids,] # select protein_id that are both in .faa and .fna
order_idx <- match(faa_ids, fna$protein_id) # match the order of the proteins from .fna
ordered_faa <- faa[order_idx] # apply the right order to the .faa
ordered_faa <- faa[order_idx] # apply the right order to the .faa
order_idx <- match(fna$protein_id, faa_ids) # match the order of the proteins from .fna
fna$protein_id %in% faa_ids
fna[fna$protein_id %in% faa_ids == FALSE, ]
fna[fna$protein_id %in% faa_ids == TRUE, ]
fna[faa_ids %in% fna$protein_id == TRUE, ]
fna[faa_ids %in% fna$protein_id, ]
fna$protein_id[duplicated(fna$protein_id)]
fna[duplicated(fna)]
duplicated(fna)
fna[duplicated(fna), ]
fna <- readDNAStringSet("cds_from_genomic.fna") %>% # extract .fna file (proteins' sequences)
as.data.frame()
fna <- fna %>% mutate( # add column with protein_id
protein_id = str_extract(rownames(fna), "(?<=protein_id=)[^]]+")
)  %>%
cbind(row.names(fna))
fna <- fna[!is.na(fna$protein_id), ] # removes rows with no protein_id
fna <- fna[!is.na(fna$protein_id) & !duplicated(fna), ] # removes rows with no protein_id
fna[duplicated(fna), ]
fna <- readDNAStringSet("cds_from_genomic.fna") %>% # extract .fna file (proteins' sequences)
as.data.frame()
fna <- fna %>% mutate( # add column with protein_id
protein_id = str_extract(rownames(fna), "(?<=protein_id=)[^]]+")
)  %>%
cbind(row.names(fna))
#fna <- fna[!is.na(fna$protein_id) & !duplicated(fna), ] # removes rows with no protein_id
fna[duplicated(fna), ]
fna[duplicated(fna$protein_id), ]
fna <- fna[!is.na(fna$protein_id), ]
fna[duplicated(fna$protein_id), ]
unique(fna$protein_id)
fna[!unique(fna$protein_id),]
unique(fna$protein_id)
fna[!fna$protein_id %in% unique(fna$protein_id)]
fna[fna$protein_id %in% unique(fna$protein_id)]
fna[fna$protein_id %in% unique(fna$protein_id), ]
View(fna)
library("seqinr")
faa <- read.fasta("protein.faa")
View(faa)
_
fna <- read.fasta("cds_from_genomic.fna") #%>% # extract .fna file (proteins' sequences)
View(fna)
fna <- read.fasta("cds_from_genomic.fna") %>% # extract .fna file (proteins' sequences)
as.data.frame()
View(fna)
attributes(fna)[["Annot"]]
attributes(fna[,])[["Annot"]]
fna <- fna %>% as.data.frame()
fna <- read.fasta("cds_from_genomic.fna", as.string = TRUE) %>% # extract .fna file (proteins' sequences)
as.data.frame()
fna <- fna %>% mutate( # add column with protein_id
protein_id = str_extract(rownames(fna), "(?<=protein_id=)[^]]+")
)  %>%
cbind(row.names(fna))
fna <- fna[!is.na(fna$protein_id), ]
#fna <- fna[!is.na(fna$protein_id) & !duplicated(fna), ] # removes rows with no protein_id
fna <- read.fasta("cds_from_genomic.fna") %>% # extract .fna file (proteins' sequences)
as.data.frame()
fna <- read.fasta("cds_from_genomic.fna") #%>% # extract .fna file (proteins' sequences)
View(fna)
fna <- read.fasta("cds_from_genomic.fna"? as.string = TRUE) #%>% # extract .fna file (proteins' sequences)
fna <- read.fasta("cds_from_genomic.fna", as.string = TRUE) #%>% # extract .fna file (proteins' sequences)
View(fna)
fna[["lcl|NZ_MCTE02000001.1_cds_WP_408103861.1_1"]]
View(faa)
faa[["WP_000090472.1"]]
df <- data.frame(
sequence = sapply(fna, function(x) paste(x, collapse = "")),  # colonne ADN
name = sapply(fna, function(x) attr(x, "name")),              # colonne name
annot = sapply(fna, function(x) attr(x, "Annot")),            # colonne Annot
stringsAsFactors = FALSE
)
# VÃ©rifier
head(df)
View(df)
fna <- data.frame(
sequence = sapply(fna, function(x) paste(x, collapse = "")),  # DNA
name = sapply(fna, function(x) attr(x, "name")),              # name
annot = sapply(fna, function(x) attr(x, "Annot")),            # Annot
stringsAsFactors = FALSE
) %>% mutate( # add column with protein_id
protein_id = str_extract(rownames(fna), "(?<=protein_id=)[^]]+")
)  %>%
cbind(row.names(fna))
fna <- data.frame(
sequence = sapply(fna, function(x) paste(x, collapse = "")),  # DNA
name = sapply(fna, function(x) attr(x, "name")),              # name
annot = sapply(fna, function(x) attr(x, "Annot")),            # Annot
stringsAsFactors = FALSE
) %>% mutate( # add column with protein_id
protein_id = str_extract(Annot, "(?<=protein_id=)[^]]+")
)  %>%
cbind(row.names(fna))
fna <- data.frame(
sequence = sapply(fna, function(x) paste(x, collapse = "")),  # DNA
name = sapply(fna, function(x) attr(x, "name")),              # name
annot = sapply(fna, function(x) attr(x, "Annot")),            # Annot
stringsAsFactors = FALSE
) %>% mutate( # add column with protein_id
protein_id = str_extract(fna$Annot, "(?<=protein_id=)[^]]+")
)  %>%
cbind(row.names(fna))
fna <- data.frame(
sequence = sapply(fna, function(x) paste(x, collapse = "")),  # DNA
name = sapply(fna, function(x) attr(x, "name")),              # name
annot = sapply(fna, function(x) attr(x, "Annot")),            # Annot
stringsAsFactors = FALSE
)
fna <- fna %>% mutate( # add column with protein_id
protein_id = str_extract(fna$Annot, "(?<=protein_id=)[^]]+")
)  %>%
cbind(row.names(fna))
fna <- data.frame(
sequence = sapply(fna, function(x) paste(x, collapse = "")),  # DNA
name = sapply(fna, function(x) attr(x, "name")),              # name
annot = sapply(fna, function(x) attr(x, "Annot")),            # Annot
stringsAsFactors = FALSE
)
fna <- read.fasta("cds_from_genomic.fna", as.string = TRUE) #%>% # extract .fna file (proteins' sequences)
fna <- data.frame(
sequence = sapply(fna, function(x) paste(x, collapse = "")),  # DNA
name = sapply(fna, function(x) attr(x, "name")),              # name
annot = sapply(fna, function(x) attr(x, "Annot")),            # Annot
stringsAsFactors = FALSE
)
'''fna <- fna %>% mutate(
protein_id = str_extract(fna$Annot, "(?<=protein_id=)[^]]+") # add column with protein_id
)  %>%
cbind(row.names(fna))
fna <- fna[!is.na(fna$protein_id), ] # remove NA
'''
View(fna)
fna <- read.fasta("cds_from_genomic.fna", as.string = TRUE) #%>% # extract .fna file (proteins' sequences)
fna <- data.frame(
sequence = sapply(fna, function(x) paste(x, collapse = "")),  # DNA
name = sapply(fna, function(x) attr(x, "name")),              # name
annot = sapply(fna, function(x) attr(x, "Annot")),            # Annot
stringsAsFactors = FALSE
) %>% mutate(
protein_id = str_extract(fna$annot, "(?<=protein_id=)[^]]+") # add column with protein_id
)  %>%
cbind(row.names(fna))
str_extract(fna$annot, "(?<=protein_id=)[^]]+")
fna <- read.fasta("cds_from_genomic.fna", as.string = TRUE) #%>% # extract .fna file (proteins' sequences)
fna <- data.frame(
sequence = sapply(fna, function(x) paste(x, collapse = "")),  # DNA
name = sapply(fna, function(x) attr(x, "name")),              # name
annot = sapply(fna, function(x) attr(x, "Annot")),            # Annot
stringsAsFactors = FALSE
)
View(fna)
str_extract(fna$annot, "(?<=protein_id=)[^]]+")
fna <- fna %>% mutate( # add column with protein_id
protein_id = str_extract(rownames(fna), "(?<=protein_id=)[^]]+")
)  %>%
cbind(row.names(fna))
fna <- fna[!is.na(fna$protein_id), ]
fna <- read.fasta("cds_from_genomic.fna", as.string = TRUE) #%>% # extract .fna file (proteins' sequences)
fna <- data.frame(
sequence = sapply(fna, function(x) paste(x, collapse = "")),  # DNA
name = sapply(fna, function(x) attr(x, "name")),              # name
annot = sapply(fna, function(x) attr(x, "Annot")),            # Annot
stringsAsFactors = FALSE
)
fna <- fna %>% mutate( # add column with protein_id
protein_id = str_extract(rownames(fna), "(?<=protein_id=)[^]]+")
)
fna <- fna %>% mutate( # add column with protein_id
protein_id = str_extract(fna$annot, "(?<=protein_id=)[^]]+")
)
fna <- fna %>% mutate( # add column with protein_id
protein_id = str_extract(fna$annot, "(?<=protein_id=)[^]]+")
) %>%
cbind(row.names(fna))
fna <- read.fasta("cds_from_genomic.fna", as.string = TRUE) #%>% # extract .fna file (proteins' sequences)
fna <- data.frame(
sequence = sapply(fna, function(x) paste(x, collapse = "")),  # DNA
name = sapply(fna, function(x) attr(x, "name")),              # name
annot = sapply(fna, function(x) attr(x, "Annot")),            # Annot
stringsAsFactors = FALSE
)
fna <- fna %>% mutate( # add column with protein_id
protein_id = str_extract(fna$annot, "(?<=protein_id=)[^]]+")
)
row.names(fna) <- NULL
fna <- read.fasta("cds_from_genomic.fna", as.string = TRUE) # extract .fna file (proteins' sequences)
fna <- data.frame(
sequence = sapply(fna, function(x) paste(x, collapse = "")),  # DNA
name = sapply(fna, function(x) attr(x, "name")),              # name
annot = sapply(fna, function(x) attr(x, "Annot")),            # Annot
stringsAsFactors = FALSE
)
fna <- fna %>% mutate( # add column with protein_id
protein_id = str_extract(fna$annot, "(?<=protein_id=)[^]]+")
)
row.names(fna) <- NULL # reset indexes
fna <- fna[!is.na(fna$protein_id), ] # remove rows with no protein_id
faa <- read.fasta("protein.faa")
names(faa)
faa_ids <- sub(" .*", "", names(faa))  # create list with protein_id
fna <- fna[fna$protein_id %in% faa_ids,] # select protein_id that are both in .faa and .fna
View(fna)
order_idx <- match(fna$protein_id, faa_ids) # match the order of the proteins from .fna
ordered_faa <- faa[order_idx] # apply the right order to the .faa
View(ordered_faa)
ordered_faa
type(ordered_faa)
View(ordered_faa)
ordered_faa[["WP_408103861.1"]]
ordered_faa[["WP_408103861.1"]]
ordered_faa[4160]
fna <- fna[fna$protein_id %in% faa_ids,]
fna$protein_id %in% faa_ids
faa[['WP_408103861.1']]
#writeXStringSet(ordered_faa, "reordered.faa") # save the ordered .faa file
# Extract names
seq_names <- sapply(ordered_faa, function(x) attr(x, "name"))
# Optional: annotations (as comment lines) â you can prepend to sequence name
seq_annot <- sapply(ordered_faa, function(x) attr(x, "Annot"))
# If you want to include the annotation in the header
headers <- paste0(seq_names, " ", seq_annot)
# Write FASTA
write.fasta(sequences = lapply(sequences, s2c), names = headers,file.out = "reordered.faa")
sapply(ordered_faa, function(x) attr(x, "name"))
seq_annot <- sapply(ordered_faa, function(x) attr(x, "Annot"))
sapply(ordered_faa, function(x) attr(x, "Annot"))
faa[["WP_000090472.1"]]
# Write FASTA
write.fasta(sequences = ordered_faa, names = sapply(ordered_faa, function(x) attr(x, "Annot")),file.out = "reordered.faa")
sapply(ordered_faa, function(x) attr(x, "Annot"))
sub("^>", "", sapply(ordered_faa, function(x) attr(x, "Annot")))
write.fasta(sequences = ordered_faa, names = sub("^>", "", sapply(ordered_faa, function(x) attr(x, "Annot"))),file.out = "reordered.faa")
View(fna)
gff <- read.csv("genomic.gff")
View(gff)
library(rtracklayer)
View(gff)
gff <- import("genomic.gff")
defense_systems <- read.csv("defense_systems.tsv")
defense_systems <- read.csv("defense_systems.tsv", sep = " ")
View(defense_systems)
defense_systems <- read.csv("defense_systems.tsv", header = TRUE, sep = " ")
View(defense_systems)
